
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { installDatabaseFunctions } from '@/utils/dbFunctions';

const SUPABASE_URL = "https://cifbetjefyfocafanlhv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNpZmJldGplZnlmb2NhZmFubGh2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4NzgzODIsImV4cCI6MjA1NzQ1NDM4Mn0.B1-2XP0VVByxEq43KzoGml8W6z_XVtsh542BuiDm3Cw";

// Create a singleton instance for the public client
let supabaseInstance = null;

// Function to get supabase client with anon key
export const getSupabaseClient = () => {
  if (!supabaseInstance) {
    supabaseInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        persistSession: true,
        autoRefreshToken: true,
        detectSessionInUrl: true,
      },
      global: {
        headers: {
          'Content-Type': 'application/json',
        },
      },
    });
  }
  return supabaseInstance;
};

/**
 * Récupère un client Supabase avec les privilèges d'administration
 * @returns Client Supabase avec privilèges admin
 */
export const getAdminSupabaseClient = () => {
  // Vérifier d'abord si les variables d'environnement sont définies
  const adminUrl = import.meta.env.VITE_SUPABASE_URL;
  const adminKey = import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY;
  
  if (!adminUrl || !adminKey) {
    console.log("Variables d'environnement admin non définies, utilisation du client standard");
    return getSupabaseClient(); // Utiliser la fonction pour récupérer le client standard
  }
  
  try {
    const supabaseAdmin = createClient(
      adminUrl,
      adminKey,
      {
        auth: {
          autoRefreshToken: false,
          persistSession: false
        }
      }
    );
    return supabaseAdmin;
  } catch (error) {
    console.error("Erreur lors de la création du client admin Supabase:", error);
    // Fallback au client standard en cas d'erreur
    return getSupabaseClient();
  }
};

// For backwards compatibility
export const supabase = getSupabaseClient();

// Export storage URL and key properly as constants instead of properties
export const STORAGE_URL = `${SUPABASE_URL}/storage/v1`;
export const SUPABASE_KEY = SUPABASE_PUBLISHABLE_KEY;

// Export constants for use in other modules
export { SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY };

// Initialize database functions
export const initDatabaseFunctions = async () => {
  try {
    return await installDatabaseFunctions();
  } catch (error) {
    console.error("Failed to initialize database functions:", error);
    return false;
  }
};
